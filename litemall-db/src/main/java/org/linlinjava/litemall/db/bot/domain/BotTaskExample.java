package org.linlinjava.litemall.db.bot.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class BotTaskExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public BotTaskExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public BotTaskExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public BotTaskExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        BotTaskExample example = new BotTaskExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public BotTaskExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public BotTaskExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBindIdIsNull() {
            addCriterion("bind_id is null");
            return (Criteria) this;
        }

        public Criteria andBindIdIsNotNull() {
            addCriterion("bind_id is not null");
            return (Criteria) this;
        }

        public Criteria andBindIdEqualTo(Long value) {
            addCriterion("bind_id =", value, "bindId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBindIdEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bind_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBindIdNotEqualTo(Long value) {
            addCriterion("bind_id <>", value, "bindId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBindIdNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bind_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBindIdGreaterThan(Long value) {
            addCriterion("bind_id >", value, "bindId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBindIdGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bind_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBindIdGreaterThanOrEqualTo(Long value) {
            addCriterion("bind_id >=", value, "bindId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBindIdGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bind_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBindIdLessThan(Long value) {
            addCriterion("bind_id <", value, "bindId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBindIdLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bind_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBindIdLessThanOrEqualTo(Long value) {
            addCriterion("bind_id <=", value, "bindId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBindIdLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bind_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBindIdIn(List<Long> values) {
            addCriterion("bind_id in", values, "bindId");
            return (Criteria) this;
        }

        public Criteria andBindIdNotIn(List<Long> values) {
            addCriterion("bind_id not in", values, "bindId");
            return (Criteria) this;
        }

        public Criteria andBindIdBetween(Long value1, Long value2) {
            addCriterion("bind_id between", value1, value2, "bindId");
            return (Criteria) this;
        }

        public Criteria andBindIdNotBetween(Long value1, Long value2) {
            addCriterion("bind_id not between", value1, value2, "bindId");
            return (Criteria) this;
        }

        public Criteria andBotTypeIsNull() {
            addCriterion("bot_type is null");
            return (Criteria) this;
        }

        public Criteria andBotTypeIsNotNull() {
            addCriterion("bot_type is not null");
            return (Criteria) this;
        }

        public Criteria andBotTypeEqualTo(Integer value) {
            addCriterion("bot_type =", value, "botType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBotTypeEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bot_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBotTypeNotEqualTo(Integer value) {
            addCriterion("bot_type <>", value, "botType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBotTypeNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bot_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBotTypeGreaterThan(Integer value) {
            addCriterion("bot_type >", value, "botType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBotTypeGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bot_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBotTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("bot_type >=", value, "botType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBotTypeGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bot_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBotTypeLessThan(Integer value) {
            addCriterion("bot_type <", value, "botType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBotTypeLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bot_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBotTypeLessThanOrEqualTo(Integer value) {
            addCriterion("bot_type <=", value, "botType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andBotTypeLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("bot_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBotTypeIn(List<Integer> values) {
            addCriterion("bot_type in", values, "botType");
            return (Criteria) this;
        }

        public Criteria andBotTypeNotIn(List<Integer> values) {
            addCriterion("bot_type not in", values, "botType");
            return (Criteria) this;
        }

        public Criteria andBotTypeBetween(Integer value1, Integer value2) {
            addCriterion("bot_type between", value1, value2, "botType");
            return (Criteria) this;
        }

        public Criteria andBotTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("bot_type not between", value1, value2, "botType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeIsNull() {
            addCriterion("task_type is null");
            return (Criteria) this;
        }

        public Criteria andTaskTypeIsNotNull() {
            addCriterion("task_type is not null");
            return (Criteria) this;
        }

        public Criteria andTaskTypeEqualTo(Integer value) {
            addCriterion("task_type =", value, "taskType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andTaskTypeEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("task_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotEqualTo(Integer value) {
            addCriterion("task_type <>", value, "taskType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andTaskTypeNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("task_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaskTypeGreaterThan(Integer value) {
            addCriterion("task_type >", value, "taskType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andTaskTypeGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("task_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaskTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_type >=", value, "taskType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andTaskTypeGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("task_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaskTypeLessThan(Integer value) {
            addCriterion("task_type <", value, "taskType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andTaskTypeLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("task_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaskTypeLessThanOrEqualTo(Integer value) {
            addCriterion("task_type <=", value, "taskType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andTaskTypeLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("task_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTaskTypeIn(List<Integer> values) {
            addCriterion("task_type in", values, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotIn(List<Integer> values) {
            addCriterion("task_type not in", values, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeBetween(Integer value1, Integer value2) {
            addCriterion("task_type between", value1, value2, "taskType");
            return (Criteria) this;
        }

        public Criteria andTaskTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("task_type not between", value1, value2, "taskType");
            return (Criteria) this;
        }

        public Criteria andRunStatusIsNull() {
            addCriterion("run_status is null");
            return (Criteria) this;
        }

        public Criteria andRunStatusIsNotNull() {
            addCriterion("run_status is not null");
            return (Criteria) this;
        }

        public Criteria andRunStatusEqualTo(Integer value) {
            addCriterion("run_status =", value, "runStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andRunStatusEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("run_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStatusNotEqualTo(Integer value) {
            addCriterion("run_status <>", value, "runStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andRunStatusNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("run_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStatusGreaterThan(Integer value) {
            addCriterion("run_status >", value, "runStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andRunStatusGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("run_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("run_status >=", value, "runStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andRunStatusGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("run_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStatusLessThan(Integer value) {
            addCriterion("run_status <", value, "runStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andRunStatusLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("run_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStatusLessThanOrEqualTo(Integer value) {
            addCriterion("run_status <=", value, "runStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andRunStatusLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("run_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRunStatusIn(List<Integer> values) {
            addCriterion("run_status in", values, "runStatus");
            return (Criteria) this;
        }

        public Criteria andRunStatusNotIn(List<Integer> values) {
            addCriterion("run_status not in", values, "runStatus");
            return (Criteria) this;
        }

        public Criteria andRunStatusBetween(Integer value1, Integer value2) {
            addCriterion("run_status between", value1, value2, "runStatus");
            return (Criteria) this;
        }

        public Criteria andRunStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("run_status not between", value1, value2, "runStatus");
            return (Criteria) this;
        }

        public Criteria andProcessingIsNull() {
            addCriterion("processing is null");
            return (Criteria) this;
        }

        public Criteria andProcessingIsNotNull() {
            addCriterion("processing is not null");
            return (Criteria) this;
        }

        public Criteria andProcessingEqualTo(Integer value) {
            addCriterion("processing =", value, "processing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessingEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("processing = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingNotEqualTo(Integer value) {
            addCriterion("processing <>", value, "processing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessingNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("processing <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingGreaterThan(Integer value) {
            addCriterion("processing >", value, "processing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessingGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("processing > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingGreaterThanOrEqualTo(Integer value) {
            addCriterion("processing >=", value, "processing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessingGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("processing >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingLessThan(Integer value) {
            addCriterion("processing <", value, "processing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessingLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("processing < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingLessThanOrEqualTo(Integer value) {
            addCriterion("processing <=", value, "processing");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessingLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("processing <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessingIn(List<Integer> values) {
            addCriterion("processing in", values, "processing");
            return (Criteria) this;
        }

        public Criteria andProcessingNotIn(List<Integer> values) {
            addCriterion("processing not in", values, "processing");
            return (Criteria) this;
        }

        public Criteria andProcessingBetween(Integer value1, Integer value2) {
            addCriterion("processing between", value1, value2, "processing");
            return (Criteria) this;
        }

        public Criteria andProcessingNotBetween(Integer value1, Integer value2) {
            addCriterion("processing not between", value1, value2, "processing");
            return (Criteria) this;
        }

        public Criteria andProcessionTimeIsNull() {
            addCriterion("procession_time is null");
            return (Criteria) this;
        }

        public Criteria andProcessionTimeIsNotNull() {
            addCriterion("procession_time is not null");
            return (Criteria) this;
        }

        public Criteria andProcessionTimeEqualTo(Long value) {
            addCriterion("procession_time =", value, "processionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessionTimeEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("procession_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessionTimeNotEqualTo(Long value) {
            addCriterion("procession_time <>", value, "processionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessionTimeNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("procession_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessionTimeGreaterThan(Long value) {
            addCriterion("procession_time >", value, "processionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessionTimeGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("procession_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessionTimeGreaterThanOrEqualTo(Long value) {
            addCriterion("procession_time >=", value, "processionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessionTimeGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("procession_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessionTimeLessThan(Long value) {
            addCriterion("procession_time <", value, "processionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessionTimeLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("procession_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessionTimeLessThanOrEqualTo(Long value) {
            addCriterion("procession_time <=", value, "processionTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andProcessionTimeLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("procession_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andProcessionTimeIn(List<Long> values) {
            addCriterion("procession_time in", values, "processionTime");
            return (Criteria) this;
        }

        public Criteria andProcessionTimeNotIn(List<Long> values) {
            addCriterion("procession_time not in", values, "processionTime");
            return (Criteria) this;
        }

        public Criteria andProcessionTimeBetween(Long value1, Long value2) {
            addCriterion("procession_time between", value1, value2, "processionTime");
            return (Criteria) this;
        }

        public Criteria andProcessionTimeNotBetween(Long value1, Long value2) {
            addCriterion("procession_time not between", value1, value2, "processionTime");
            return (Criteria) this;
        }

        public Criteria andScheduleTypeIsNull() {
            addCriterion("schedule_type is null");
            return (Criteria) this;
        }

        public Criteria andScheduleTypeIsNotNull() {
            addCriterion("schedule_type is not null");
            return (Criteria) this;
        }

        public Criteria andScheduleTypeEqualTo(Integer value) {
            addCriterion("schedule_type =", value, "scheduleType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andScheduleTypeEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("schedule_type = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScheduleTypeNotEqualTo(Integer value) {
            addCriterion("schedule_type <>", value, "scheduleType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andScheduleTypeNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("schedule_type <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScheduleTypeGreaterThan(Integer value) {
            addCriterion("schedule_type >", value, "scheduleType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andScheduleTypeGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("schedule_type > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScheduleTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("schedule_type >=", value, "scheduleType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andScheduleTypeGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("schedule_type >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScheduleTypeLessThan(Integer value) {
            addCriterion("schedule_type <", value, "scheduleType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andScheduleTypeLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("schedule_type < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScheduleTypeLessThanOrEqualTo(Integer value) {
            addCriterion("schedule_type <=", value, "scheduleType");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andScheduleTypeLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("schedule_type <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andScheduleTypeIn(List<Integer> values) {
            addCriterion("schedule_type in", values, "scheduleType");
            return (Criteria) this;
        }

        public Criteria andScheduleTypeNotIn(List<Integer> values) {
            addCriterion("schedule_type not in", values, "scheduleType");
            return (Criteria) this;
        }

        public Criteria andScheduleTypeBetween(Integer value1, Integer value2) {
            addCriterion("schedule_type between", value1, value2, "scheduleType");
            return (Criteria) this;
        }

        public Criteria andScheduleTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("schedule_type not between", value1, value2, "scheduleType");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(BotTaskWithBLOBs.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bot_task
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        private BotTaskExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        protected Criteria(BotTaskExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public BotTaskExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table bot_task
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bot_task
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_task
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.bot.domain.BotTaskExample example);
    }
}