package org.linlinjava.litemall.db.bot.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class BotTicketChargeHistoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public BotTicketChargeHistoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public BotTicketChargeHistoryExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public BotTicketChargeHistoryExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        BotTicketChargeHistoryExample example = new BotTicketChargeHistoryExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public BotTicketChargeHistoryExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public BotTicketChargeHistoryExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTicketIdIsNull() {
            addCriterion("ticket_id is null");
            return (Criteria) this;
        }

        public Criteria andTicketIdIsNotNull() {
            addCriterion("ticket_id is not null");
            return (Criteria) this;
        }

        public Criteria andTicketIdEqualTo(Long value) {
            addCriterion("ticket_id =", value, "ticketId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andTicketIdEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("ticket_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTicketIdNotEqualTo(Long value) {
            addCriterion("ticket_id <>", value, "ticketId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andTicketIdNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("ticket_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTicketIdGreaterThan(Long value) {
            addCriterion("ticket_id >", value, "ticketId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andTicketIdGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("ticket_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTicketIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ticket_id >=", value, "ticketId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andTicketIdGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("ticket_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTicketIdLessThan(Long value) {
            addCriterion("ticket_id <", value, "ticketId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andTicketIdLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("ticket_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTicketIdLessThanOrEqualTo(Long value) {
            addCriterion("ticket_id <=", value, "ticketId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andTicketIdLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("ticket_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andTicketIdIn(List<Long> values) {
            addCriterion("ticket_id in", values, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdNotIn(List<Long> values) {
            addCriterion("ticket_id not in", values, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdBetween(Long value1, Long value2) {
            addCriterion("ticket_id between", value1, value2, "ticketId");
            return (Criteria) this;
        }

        public Criteria andTicketIdNotBetween(Long value1, Long value2) {
            addCriterion("ticket_id not between", value1, value2, "ticketId");
            return (Criteria) this;
        }

        public Criteria andRechargeIsNull() {
            addCriterion("recharge is null");
            return (Criteria) this;
        }

        public Criteria andRechargeIsNotNull() {
            addCriterion("recharge is not null");
            return (Criteria) this;
        }

        public Criteria andRechargeEqualTo(Integer value) {
            addCriterion("recharge =", value, "recharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("recharge = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeNotEqualTo(Integer value) {
            addCriterion("recharge <>", value, "recharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("recharge <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeGreaterThan(Integer value) {
            addCriterion("recharge >", value, "recharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("recharge > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeGreaterThanOrEqualTo(Integer value) {
            addCriterion("recharge >=", value, "recharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("recharge >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeLessThan(Integer value) {
            addCriterion("recharge <", value, "recharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("recharge < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeLessThanOrEqualTo(Integer value) {
            addCriterion("recharge <=", value, "recharge");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andRechargeLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("recharge <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andRechargeIn(List<Integer> values) {
            addCriterion("recharge in", values, "recharge");
            return (Criteria) this;
        }

        public Criteria andRechargeNotIn(List<Integer> values) {
            addCriterion("recharge not in", values, "recharge");
            return (Criteria) this;
        }

        public Criteria andRechargeBetween(Integer value1, Integer value2) {
            addCriterion("recharge between", value1, value2, "recharge");
            return (Criteria) this;
        }

        public Criteria andRechargeNotBetween(Integer value1, Integer value2) {
            addCriterion("recharge not between", value1, value2, "recharge");
            return (Criteria) this;
        }

        public Criteria andDurationIsNull() {
            addCriterion("duration is null");
            return (Criteria) this;
        }

        public Criteria andDurationIsNotNull() {
            addCriterion("duration is not null");
            return (Criteria) this;
        }

        public Criteria andDurationEqualTo(String value) {
            addCriterion("duration =", value, "duration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andDurationEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("duration = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDurationNotEqualTo(String value) {
            addCriterion("duration <>", value, "duration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andDurationNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("duration <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThan(String value) {
            addCriterion("duration >", value, "duration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andDurationGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("duration > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDurationGreaterThanOrEqualTo(String value) {
            addCriterion("duration >=", value, "duration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andDurationGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("duration >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDurationLessThan(String value) {
            addCriterion("duration <", value, "duration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andDurationLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("duration < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDurationLessThanOrEqualTo(String value) {
            addCriterion("duration <=", value, "duration");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andDurationLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("duration <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDurationLike(String value) {
            addCriterion("duration like", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotLike(String value) {
            addCriterion("duration not like", value, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationIn(List<String> values) {
            addCriterion("duration in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotIn(List<String> values) {
            addCriterion("duration not in", values, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationBetween(String value1, String value2) {
            addCriterion("duration between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andDurationNotBetween(String value1, String value2) {
            addCriterion("duration not between", value1, value2, "duration");
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseIsNull() {
            addCriterion("fisrt_purchase is null");
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseIsNotNull() {
            addCriterion("fisrt_purchase is not null");
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseEqualTo(Integer value) {
            addCriterion("fisrt_purchase =", value, "fisrtPurchase");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andFisrtPurchaseEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("fisrt_purchase = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseNotEqualTo(Integer value) {
            addCriterion("fisrt_purchase <>", value, "fisrtPurchase");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andFisrtPurchaseNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("fisrt_purchase <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseGreaterThan(Integer value) {
            addCriterion("fisrt_purchase >", value, "fisrtPurchase");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andFisrtPurchaseGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("fisrt_purchase > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseGreaterThanOrEqualTo(Integer value) {
            addCriterion("fisrt_purchase >=", value, "fisrtPurchase");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andFisrtPurchaseGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("fisrt_purchase >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseLessThan(Integer value) {
            addCriterion("fisrt_purchase <", value, "fisrtPurchase");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andFisrtPurchaseLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("fisrt_purchase < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseLessThanOrEqualTo(Integer value) {
            addCriterion("fisrt_purchase <=", value, "fisrtPurchase");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andFisrtPurchaseLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("fisrt_purchase <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseIn(List<Integer> values) {
            addCriterion("fisrt_purchase in", values, "fisrtPurchase");
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseNotIn(List<Integer> values) {
            addCriterion("fisrt_purchase not in", values, "fisrtPurchase");
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseBetween(Integer value1, Integer value2) {
            addCriterion("fisrt_purchase between", value1, value2, "fisrtPurchase");
            return (Criteria) this;
        }

        public Criteria andFisrtPurchaseNotBetween(Integer value1, Integer value2) {
            addCriterion("fisrt_purchase not between", value1, value2, "fisrtPurchase");
            return (Criteria) this;
        }

        public Criteria andMerchantOrderIsNull() {
            addCriterion("merchant_order is null");
            return (Criteria) this;
        }

        public Criteria andMerchantOrderIsNotNull() {
            addCriterion("merchant_order is not null");
            return (Criteria) this;
        }

        public Criteria andMerchantOrderEqualTo(Integer value) {
            addCriterion("merchant_order =", value, "merchantOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andMerchantOrderEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("merchant_order = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantOrderNotEqualTo(Integer value) {
            addCriterion("merchant_order <>", value, "merchantOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andMerchantOrderNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("merchant_order <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantOrderGreaterThan(Integer value) {
            addCriterion("merchant_order >", value, "merchantOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andMerchantOrderGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("merchant_order > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("merchant_order >=", value, "merchantOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andMerchantOrderGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("merchant_order >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantOrderLessThan(Integer value) {
            addCriterion("merchant_order <", value, "merchantOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andMerchantOrderLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("merchant_order < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantOrderLessThanOrEqualTo(Integer value) {
            addCriterion("merchant_order <=", value, "merchantOrder");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andMerchantOrderLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("merchant_order <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMerchantOrderIn(List<Integer> values) {
            addCriterion("merchant_order in", values, "merchantOrder");
            return (Criteria) this;
        }

        public Criteria andMerchantOrderNotIn(List<Integer> values) {
            addCriterion("merchant_order not in", values, "merchantOrder");
            return (Criteria) this;
        }

        public Criteria andMerchantOrderBetween(Integer value1, Integer value2) {
            addCriterion("merchant_order between", value1, value2, "merchantOrder");
            return (Criteria) this;
        }

        public Criteria andMerchantOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("merchant_order not between", value1, value2, "merchantOrder");
            return (Criteria) this;
        }

        public Criteria andPayStatusIsNull() {
            addCriterion("pay_status is null");
            return (Criteria) this;
        }

        public Criteria andPayStatusIsNotNull() {
            addCriterion("pay_status is not null");
            return (Criteria) this;
        }

        public Criteria andPayStatusEqualTo(Integer value) {
            addCriterion("pay_status =", value, "payStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayStatusEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_status = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayStatusNotEqualTo(Integer value) {
            addCriterion("pay_status <>", value, "payStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayStatusNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_status <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayStatusGreaterThan(Integer value) {
            addCriterion("pay_status >", value, "payStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayStatusGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_status > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("pay_status >=", value, "payStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayStatusGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_status >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayStatusLessThan(Integer value) {
            addCriterion("pay_status <", value, "payStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayStatusLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_status < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayStatusLessThanOrEqualTo(Integer value) {
            addCriterion("pay_status <=", value, "payStatus");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayStatusLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_status <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayStatusIn(List<Integer> values) {
            addCriterion("pay_status in", values, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusNotIn(List<Integer> values) {
            addCriterion("pay_status not in", values, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusBetween(Integer value1, Integer value2) {
            addCriterion("pay_status between", value1, value2, "payStatus");
            return (Criteria) this;
        }

        public Criteria andPayStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("pay_status not between", value1, value2, "payStatus");
            return (Criteria) this;
        }

        public Criteria andStatusTimeIsNull() {
            addCriterion("status_time is null");
            return (Criteria) this;
        }

        public Criteria andStatusTimeIsNotNull() {
            addCriterion("status_time is not null");
            return (Criteria) this;
        }

        public Criteria andStatusTimeEqualTo(LocalDateTime value) {
            addCriterion("status_time =", value, "statusTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andStatusTimeEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("status_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusTimeNotEqualTo(LocalDateTime value) {
            addCriterion("status_time <>", value, "statusTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andStatusTimeNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("status_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusTimeGreaterThan(LocalDateTime value) {
            addCriterion("status_time >", value, "statusTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andStatusTimeGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("status_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("status_time >=", value, "statusTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andStatusTimeGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("status_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusTimeLessThan(LocalDateTime value) {
            addCriterion("status_time <", value, "statusTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andStatusTimeLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("status_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("status_time <=", value, "statusTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andStatusTimeLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("status_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusTimeIn(List<LocalDateTime> values) {
            addCriterion("status_time in", values, "statusTime");
            return (Criteria) this;
        }

        public Criteria andStatusTimeNotIn(List<LocalDateTime> values) {
            addCriterion("status_time not in", values, "statusTime");
            return (Criteria) this;
        }

        public Criteria andStatusTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("status_time between", value1, value2, "statusTime");
            return (Criteria) this;
        }

        public Criteria andStatusTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("status_time not between", value1, value2, "statusTime");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdIsNull() {
            addCriterion("pay_order_id is null");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdIsNotNull() {
            addCriterion("pay_order_id is not null");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdEqualTo(String value) {
            addCriterion("pay_order_id =", value, "payOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayOrderIdEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_order_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOrderIdNotEqualTo(String value) {
            addCriterion("pay_order_id <>", value, "payOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayOrderIdNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_order_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOrderIdGreaterThan(String value) {
            addCriterion("pay_order_id >", value, "payOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayOrderIdGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_order_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOrderIdGreaterThanOrEqualTo(String value) {
            addCriterion("pay_order_id >=", value, "payOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayOrderIdGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_order_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOrderIdLessThan(String value) {
            addCriterion("pay_order_id <", value, "payOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayOrderIdLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_order_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOrderIdLessThanOrEqualTo(String value) {
            addCriterion("pay_order_id <=", value, "payOrderId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andPayOrderIdLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("pay_order_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPayOrderIdLike(String value) {
            addCriterion("pay_order_id like", value, "payOrderId");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdNotLike(String value) {
            addCriterion("pay_order_id not like", value, "payOrderId");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdIn(List<String> values) {
            addCriterion("pay_order_id in", values, "payOrderId");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdNotIn(List<String> values) {
            addCriterion("pay_order_id not in", values, "payOrderId");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdBetween(String value1, String value2) {
            addCriterion("pay_order_id between", value1, value2, "payOrderId");
            return (Criteria) this;
        }

        public Criteria andPayOrderIdNotBetween(String value1, String value2) {
            addCriterion("pay_order_id not between", value1, value2, "payOrderId");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(LocalDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("create_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeNotEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("create_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(LocalDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("create_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeGreaterThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("create_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(LocalDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("create_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria andCreateTimeLessThanOrEqualToColumn(BotTicketChargeHistory.Column column) {
            addCriterion(new StringBuilder("create_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<LocalDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        private BotTicketChargeHistoryExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        protected Criteria(BotTicketChargeHistoryExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public BotTicketChargeHistoryExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table bot_ticket_charge_history
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table bot_ticket_charge_history
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table bot_ticket_charge_history
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.bot.domain.BotTicketChargeHistoryExample example);
    }
}